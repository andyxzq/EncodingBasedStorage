#ifndef _Rand_Mat_Reg_Code_H_
#define _Rand_Mat_Reg_Code_H_
#include <iostream>
#include <cstdio>
#include <cstring>
#include <fstream>
#include <ctime>
#include <cmath>
#include <string>
#include <sstream>
#include <set>
#include <unistd.h>
#include <sys/stat.h>
#include "utils.h"
#include "reed_sol.h"
#include "jerasure.h"
using namespace std;

class RegeneratingCode
{
public:
	RegeneratingCode(int n, int k, int d, int l, string category);

	void GenerateCodingMatrix(const char *pFile);

	void AssignRow(int **A, int i, int dim, int lambda, int *positions);

	void EncodeStripFile(unsigned long long **coding, int offset, int rowSize);

	void ReadSourceFile(const char* pFileName, char *buffer, int filesize);

	void MbrStripCopyFile(int *offset);

	void MsrStripCopyFile(int *offset);

	void Encode(const char *pFileName);

	void WriteChunksToFile1(const char *pFileName, unsigned long long **coding, int chunkSize);

	void WriteChunksToFile2(const char *pFileName, char **coding, int chunkSize);

	void RandomEraseBlock();

	void GenerateHelpNodeIndex(const char *pCodingMatFile);

	void RegenerateChunkFile(const char *pFileName, int **invMatrix, unsigned long long **helpData, int readIns, int cols);

	void Regenerate(const char *pFileName, const char *pCodingMatFile);

	~RegeneratingCode();

	int erasedInd;
	int                n, k, d, l;          //parameter of regenerating code
	int                **codingMatrix;      //sparse random coding matrix
	int                **recoverMatrix;     //matrix consists of helper node's vector
	int                *recoverArray;
	int                **invRecoverMatrix;  //inverse matrix of recover matrix
	unsigned long long **data1;             //message strip matrix of SR-MBR and SR-MSR
	char               **data2;             //message strip matrix of Van-MBR and Van-MSR
	char               **parity;            //parity of generated by vandermonde matrix
	char               *fileBuffer;         //original file's memory buffer
	string             category;            
	set<int>           helpNodeIndexs;      //helper nodes' indexes
	int                *vandermondeMatrix;
	int                *diagonalMatrix;     //diagonal matrix for Van-MSR
	int                *subMatrix;          //left sub matrix for Van-MSR 
};
#endif